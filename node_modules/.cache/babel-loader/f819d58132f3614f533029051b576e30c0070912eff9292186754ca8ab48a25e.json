{"ast":null,"code":"import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { isPrintableAsBlockString } from '../language/blockString.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { print } from '../language/printer.mjs';\nimport { isEnumType, isInputObjectType, isInterfaceType, isObjectType, isScalarType, isUnionType } from '../type/definition.mjs';\nimport { DEFAULT_DEPRECATION_REASON, isSpecifiedDirective } from '../type/directives.mjs';\nimport { isIntrospectionType } from '../type/introspection.mjs';\nimport { isSpecifiedScalarType } from '../type/scalars.mjs';\nimport { astFromValue } from './astFromValue.mjs';\nexport function printSchema(schema) {\n  return printFilteredSchema(schema, n => !isSpecifiedDirective(n), isDefinedType);\n}\nexport function printIntrospectionSchema(schema) {\n  return printFilteredSchema(schema, isSpecifiedDirective, isIntrospectionType);\n}\nfunction isDefinedType(type) {\n  return !isSpecifiedScalarType(type) && !isIntrospectionType(type);\n}\nfunction printFilteredSchema(schema, directiveFilter, typeFilter) {\n  const directives = schema.getDirectives().filter(directiveFilter);\n  const types = Object.values(schema.getTypeMap()).filter(typeFilter);\n  return [printSchemaDefinition(schema), ...directives.map(directive => printDirective(directive)), ...types.map(type => printType(type))].filter(Boolean).join('\\n\\n');\n}\nfunction printSchemaDefinition(schema) {\n  if (schema.description == null && isSchemaOfCommonNames(schema)) {\n    return;\n  }\n  const operationTypes = [];\n  const queryType = schema.getQueryType();\n  if (queryType) {\n    operationTypes.push(`  query: ${queryType.name}`);\n  }\n  const mutationType = schema.getMutationType();\n  if (mutationType) {\n    operationTypes.push(`  mutation: ${mutationType.name}`);\n  }\n  const subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType) {\n    operationTypes.push(`  subscription: ${subscriptionType.name}`);\n  }\n  return printDescription(schema) + `schema {\\n${operationTypes.join('\\n')}\\n}`;\n}\n/**\r\n * GraphQL schema define root types for each type of operation. These types are\r\n * the same as any other type and can be named in any manner, however there is\r\n * a common naming convention:\r\n *\r\n * ```graphql\r\n *   schema {\r\n *     query: Query\r\n *     mutation: Mutation\r\n *     subscription: Subscription\r\n *   }\r\n * ```\r\n *\r\n * When using this naming convention, the schema description can be omitted.\r\n */\n\nfunction isSchemaOfCommonNames(schema) {\n  const queryType = schema.getQueryType();\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n  const mutationType = schema.getMutationType();\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n  const subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n  return true;\n}\nexport function printType(type) {\n  if (isScalarType(type)) {\n    return printScalar(type);\n  }\n  if (isObjectType(type)) {\n    return printObject(type);\n  }\n  if (isInterfaceType(type)) {\n    return printInterface(type);\n  }\n  if (isUnionType(type)) {\n    return printUnion(type);\n  }\n  if (isEnumType(type)) {\n    return printEnum(type);\n  }\n  if (isInputObjectType(type)) {\n    return printInputObject(type);\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false || invariant(false, 'Unexpected type: ' + inspect(type));\n}\nfunction printScalar(type) {\n  return printDescription(type) + `scalar ${type.name}` + printSpecifiedByURL(type);\n}\nfunction printImplementedInterfaces(type) {\n  const interfaces = type.getInterfaces();\n  return interfaces.length ? ' implements ' + interfaces.map(i => i.name).join(' & ') : '';\n}\nfunction printObject(type) {\n  return printDescription(type) + `type ${type.name}` + printImplementedInterfaces(type) + printFields(type);\n}\nfunction printInterface(type) {\n  return printDescription(type) + `interface ${type.name}` + printImplementedInterfaces(type) + printFields(type);\n}\nfunction printUnion(type) {\n  const types = type.getTypes();\n  const possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n  return printDescription(type) + 'union ' + type.name + possibleTypes;\n}\nfunction printEnum(type) {\n  const values = type.getValues().map((value, i) => printDescription(value, '  ', !i) + '  ' + value.name + printDeprecated(value.deprecationReason));\n  return printDescription(type) + `enum ${type.name}` + printBlock(values);\n}\nfunction printInputObject(type) {\n  const fields = Object.values(type.getFields()).map((f, i) => printDescription(f, '  ', !i) + '  ' + printInputValue(f));\n  return printDescription(type) + `input ${type.name}` + printBlock(fields);\n}\nfunction printFields(type) {\n  const fields = Object.values(type.getFields()).map((f, i) => printDescription(f, '  ', !i) + '  ' + f.name + printArgs(f.args, '  ') + ': ' + String(f.type) + printDeprecated(f.deprecationReason));\n  return printBlock(fields);\n}\nfunction printBlock(items) {\n  return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\nfunction printArgs(args, indentation = '') {\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n  if (args.every(arg => !arg.description)) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n  return '(\\n' + args.map((arg, i) => printDescription(arg, '  ' + indentation, !i) + '  ' + indentation + printInputValue(arg)).join('\\n') + '\\n' + indentation + ')';\n}\nfunction printInputValue(arg) {\n  const defaultAST = astFromValue(arg.defaultValue, arg.type);\n  let argDecl = arg.name + ': ' + String(arg.type);\n  if (defaultAST) {\n    argDecl += ` = ${print(defaultAST)}`;\n  }\n  return argDecl + printDeprecated(arg.deprecationReason);\n}\nfunction printDirective(directive) {\n  return printDescription(directive) + 'directive @' + directive.name + printArgs(directive.args) + (directive.isRepeatable ? ' repeatable' : '') + ' on ' + directive.locations.join(' | ');\n}\nfunction printDeprecated(reason) {\n  if (reason == null) {\n    return '';\n  }\n  if (reason !== DEFAULT_DEPRECATION_REASON) {\n    const astValue = print({\n      kind: Kind.STRING,\n      value: reason\n    });\n    return ` @deprecated(reason: ${astValue})`;\n  }\n  return ' @deprecated';\n}\nfunction printSpecifiedByURL(scalar) {\n  if (scalar.specifiedByURL == null) {\n    return '';\n  }\n  const astValue = print({\n    kind: Kind.STRING,\n    value: scalar.specifiedByURL\n  });\n  return ` @specifiedBy(url: ${astValue})`;\n}\nfunction printDescription(def, indentation = '', firstInBlock = true) {\n  const {\n    description\n  } = def;\n  if (description == null) {\n    return '';\n  }\n  const blockString = print({\n    kind: Kind.STRING,\n    value: description,\n    block: isPrintableAsBlockString(description)\n  });\n  const prefix = indentation && !firstInBlock ? '\\n' + indentation : indentation;\n  return prefix + blockString.replace(/\\n/g, '\\n' + indentation) + '\\n';\n}","map":{"version":3,"names":["inspect","invariant","isPrintableAsBlockString","Kind","print","isEnumType","isInputObjectType","isInterfaceType","isObjectType","isScalarType","isUnionType","DEFAULT_DEPRECATION_REASON","isSpecifiedDirective","isIntrospectionType","isSpecifiedScalarType","astFromValue","printSchema","schema","printFilteredSchema","n","isDefinedType","printIntrospectionSchema","type","directiveFilter","typeFilter","directives","getDirectives","filter","types","Object","values","getTypeMap","printSchemaDefinition","map","directive","printDirective","printType","Boolean","join","description","isSchemaOfCommonNames","operationTypes","queryType","getQueryType","push","name","mutationType","getMutationType","subscriptionType","getSubscriptionType","printDescription","printScalar","printObject","printInterface","printUnion","printEnum","printInputObject","printSpecifiedByURL","printImplementedInterfaces","interfaces","getInterfaces","length","i","printFields","getTypes","possibleTypes","getValues","value","printDeprecated","deprecationReason","printBlock","fields","getFields","f","printInputValue","printArgs","args","String","items","indentation","every","arg","defaultAST","defaultValue","argDecl","isRepeatable","locations","reason","astValue","kind","STRING","scalar","specifiedByURL","def","firstInBlock","blockString","block","prefix","replace"],"sources":["D:/OneDrive/Desktop/CityU/EE3070 - Design Project/eyepark/node_modules/graphql/utilities/printSchema.mjs"],"sourcesContent":["import { inspect } from '../jsutils/inspect.mjs';\r\nimport { invariant } from '../jsutils/invariant.mjs';\r\nimport { isPrintableAsBlockString } from '../language/blockString.mjs';\r\nimport { Kind } from '../language/kinds.mjs';\r\nimport { print } from '../language/printer.mjs';\r\nimport {\r\n  isEnumType,\r\n  isInputObjectType,\r\n  isInterfaceType,\r\n  isObjectType,\r\n  isScalarType,\r\n  isUnionType,\r\n} from '../type/definition.mjs';\r\nimport {\r\n  DEFAULT_DEPRECATION_REASON,\r\n  isSpecifiedDirective,\r\n} from '../type/directives.mjs';\r\nimport { isIntrospectionType } from '../type/introspection.mjs';\r\nimport { isSpecifiedScalarType } from '../type/scalars.mjs';\r\nimport { astFromValue } from './astFromValue.mjs';\r\nexport function printSchema(schema) {\r\n  return printFilteredSchema(\r\n    schema,\r\n    (n) => !isSpecifiedDirective(n),\r\n    isDefinedType,\r\n  );\r\n}\r\nexport function printIntrospectionSchema(schema) {\r\n  return printFilteredSchema(schema, isSpecifiedDirective, isIntrospectionType);\r\n}\r\n\r\nfunction isDefinedType(type) {\r\n  return !isSpecifiedScalarType(type) && !isIntrospectionType(type);\r\n}\r\n\r\nfunction printFilteredSchema(schema, directiveFilter, typeFilter) {\r\n  const directives = schema.getDirectives().filter(directiveFilter);\r\n  const types = Object.values(schema.getTypeMap()).filter(typeFilter);\r\n  return [\r\n    printSchemaDefinition(schema),\r\n    ...directives.map((directive) => printDirective(directive)),\r\n    ...types.map((type) => printType(type)),\r\n  ]\r\n    .filter(Boolean)\r\n    .join('\\n\\n');\r\n}\r\n\r\nfunction printSchemaDefinition(schema) {\r\n  if (schema.description == null && isSchemaOfCommonNames(schema)) {\r\n    return;\r\n  }\r\n\r\n  const operationTypes = [];\r\n  const queryType = schema.getQueryType();\r\n\r\n  if (queryType) {\r\n    operationTypes.push(`  query: ${queryType.name}`);\r\n  }\r\n\r\n  const mutationType = schema.getMutationType();\r\n\r\n  if (mutationType) {\r\n    operationTypes.push(`  mutation: ${mutationType.name}`);\r\n  }\r\n\r\n  const subscriptionType = schema.getSubscriptionType();\r\n\r\n  if (subscriptionType) {\r\n    operationTypes.push(`  subscription: ${subscriptionType.name}`);\r\n  }\r\n\r\n  return printDescription(schema) + `schema {\\n${operationTypes.join('\\n')}\\n}`;\r\n}\r\n/**\r\n * GraphQL schema define root types for each type of operation. These types are\r\n * the same as any other type and can be named in any manner, however there is\r\n * a common naming convention:\r\n *\r\n * ```graphql\r\n *   schema {\r\n *     query: Query\r\n *     mutation: Mutation\r\n *     subscription: Subscription\r\n *   }\r\n * ```\r\n *\r\n * When using this naming convention, the schema description can be omitted.\r\n */\r\n\r\nfunction isSchemaOfCommonNames(schema) {\r\n  const queryType = schema.getQueryType();\r\n\r\n  if (queryType && queryType.name !== 'Query') {\r\n    return false;\r\n  }\r\n\r\n  const mutationType = schema.getMutationType();\r\n\r\n  if (mutationType && mutationType.name !== 'Mutation') {\r\n    return false;\r\n  }\r\n\r\n  const subscriptionType = schema.getSubscriptionType();\r\n\r\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function printType(type) {\r\n  if (isScalarType(type)) {\r\n    return printScalar(type);\r\n  }\r\n\r\n  if (isObjectType(type)) {\r\n    return printObject(type);\r\n  }\r\n\r\n  if (isInterfaceType(type)) {\r\n    return printInterface(type);\r\n  }\r\n\r\n  if (isUnionType(type)) {\r\n    return printUnion(type);\r\n  }\r\n\r\n  if (isEnumType(type)) {\r\n    return printEnum(type);\r\n  }\r\n\r\n  if (isInputObjectType(type)) {\r\n    return printInputObject(type);\r\n  }\r\n  /* c8 ignore next 3 */\r\n  // Not reachable, all possible types have been considered.\r\n\r\n  false || invariant(false, 'Unexpected type: ' + inspect(type));\r\n}\r\n\r\nfunction printScalar(type) {\r\n  return (\r\n    printDescription(type) + `scalar ${type.name}` + printSpecifiedByURL(type)\r\n  );\r\n}\r\n\r\nfunction printImplementedInterfaces(type) {\r\n  const interfaces = type.getInterfaces();\r\n  return interfaces.length\r\n    ? ' implements ' + interfaces.map((i) => i.name).join(' & ')\r\n    : '';\r\n}\r\n\r\nfunction printObject(type) {\r\n  return (\r\n    printDescription(type) +\r\n    `type ${type.name}` +\r\n    printImplementedInterfaces(type) +\r\n    printFields(type)\r\n  );\r\n}\r\n\r\nfunction printInterface(type) {\r\n  return (\r\n    printDescription(type) +\r\n    `interface ${type.name}` +\r\n    printImplementedInterfaces(type) +\r\n    printFields(type)\r\n  );\r\n}\r\n\r\nfunction printUnion(type) {\r\n  const types = type.getTypes();\r\n  const possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\r\n  return printDescription(type) + 'union ' + type.name + possibleTypes;\r\n}\r\n\r\nfunction printEnum(type) {\r\n  const values = type\r\n    .getValues()\r\n    .map(\r\n      (value, i) =>\r\n        printDescription(value, '  ', !i) +\r\n        '  ' +\r\n        value.name +\r\n        printDeprecated(value.deprecationReason),\r\n    );\r\n  return printDescription(type) + `enum ${type.name}` + printBlock(values);\r\n}\r\n\r\nfunction printInputObject(type) {\r\n  const fields = Object.values(type.getFields()).map(\r\n    (f, i) => printDescription(f, '  ', !i) + '  ' + printInputValue(f),\r\n  );\r\n  return printDescription(type) + `input ${type.name}` + printBlock(fields);\r\n}\r\n\r\nfunction printFields(type) {\r\n  const fields = Object.values(type.getFields()).map(\r\n    (f, i) =>\r\n      printDescription(f, '  ', !i) +\r\n      '  ' +\r\n      f.name +\r\n      printArgs(f.args, '  ') +\r\n      ': ' +\r\n      String(f.type) +\r\n      printDeprecated(f.deprecationReason),\r\n  );\r\n  return printBlock(fields);\r\n}\r\n\r\nfunction printBlock(items) {\r\n  return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\r\n}\r\n\r\nfunction printArgs(args, indentation = '') {\r\n  if (args.length === 0) {\r\n    return '';\r\n  } // If every arg does not have a description, print them on one line.\r\n\r\n  if (args.every((arg) => !arg.description)) {\r\n    return '(' + args.map(printInputValue).join(', ') + ')';\r\n  }\r\n\r\n  return (\r\n    '(\\n' +\r\n    args\r\n      .map(\r\n        (arg, i) =>\r\n          printDescription(arg, '  ' + indentation, !i) +\r\n          '  ' +\r\n          indentation +\r\n          printInputValue(arg),\r\n      )\r\n      .join('\\n') +\r\n    '\\n' +\r\n    indentation +\r\n    ')'\r\n  );\r\n}\r\n\r\nfunction printInputValue(arg) {\r\n  const defaultAST = astFromValue(arg.defaultValue, arg.type);\r\n  let argDecl = arg.name + ': ' + String(arg.type);\r\n\r\n  if (defaultAST) {\r\n    argDecl += ` = ${print(defaultAST)}`;\r\n  }\r\n\r\n  return argDecl + printDeprecated(arg.deprecationReason);\r\n}\r\n\r\nfunction printDirective(directive) {\r\n  return (\r\n    printDescription(directive) +\r\n    'directive @' +\r\n    directive.name +\r\n    printArgs(directive.args) +\r\n    (directive.isRepeatable ? ' repeatable' : '') +\r\n    ' on ' +\r\n    directive.locations.join(' | ')\r\n  );\r\n}\r\n\r\nfunction printDeprecated(reason) {\r\n  if (reason == null) {\r\n    return '';\r\n  }\r\n\r\n  if (reason !== DEFAULT_DEPRECATION_REASON) {\r\n    const astValue = print({\r\n      kind: Kind.STRING,\r\n      value: reason,\r\n    });\r\n    return ` @deprecated(reason: ${astValue})`;\r\n  }\r\n\r\n  return ' @deprecated';\r\n}\r\n\r\nfunction printSpecifiedByURL(scalar) {\r\n  if (scalar.specifiedByURL == null) {\r\n    return '';\r\n  }\r\n\r\n  const astValue = print({\r\n    kind: Kind.STRING,\r\n    value: scalar.specifiedByURL,\r\n  });\r\n  return ` @specifiedBy(url: ${astValue})`;\r\n}\r\n\r\nfunction printDescription(def, indentation = '', firstInBlock = true) {\r\n  const { description } = def;\r\n\r\n  if (description == null) {\r\n    return '';\r\n  }\r\n\r\n  const blockString = print({\r\n    kind: Kind.STRING,\r\n    value: description,\r\n    block: isPrintableAsBlockString(description),\r\n  });\r\n  const prefix =\r\n    indentation && !firstInBlock ? '\\n' + indentation : indentation;\r\n  return prefix + blockString.replace(/\\n/g, '\\n' + indentation) + '\\n';\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}